// <auto-generated />
using System;
using DataLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DomainLayer.Models.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Base64")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PublicationId")
                        .HasColumnType("int");

                    b.Property<int>("UploadedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PublicationId");

                    b.HasIndex("UploadedBy");

                    b.ToTable("Attachments", (string)null);
                });

            modelBuilder.Entity("DomainLayer.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PublicationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("PublicationId");

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("DomainLayer.Models.Enterprise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Enterprises", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Global Tech Solutions"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Innovative Minds Inc."
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bright Future Holdings"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Urban Solutions LLC"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Green Energy Partners"
                        },
                        new
                        {
                            Id = 6,
                            Name = "NextGen Robotics"
                        },
                        new
                        {
                            Id = 7,
                            Name = "PureTech Industries"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Skyline Consulting Group"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Quantum Innovations"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Horizon Financial Corp."
                        },
                        new
                        {
                            Id = 11,
                            Name = "Vertex Marketing Solutions"
                        },
                        new
                        {
                            Id = 12,
                            Name = "EcoVision Solutions"
                        },
                        new
                        {
                            Id = 13,
                            Name = "OptiHealth Pharmaceuticals"
                        },
                        new
                        {
                            Id = 14,
                            Name = "BlueWave Enterprises"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Dynamic Logistics Ltd."
                        },
                        new
                        {
                            Id = 16,
                            Name = "Peak Performance Advisors"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Smart Grid Technologies"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Luminous Media Group"
                        },
                        new
                        {
                            Id = 19,
                            Name = "AlphaTech Labs"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Elite Software Solutions"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Fusion Global Partners"
                        },
                        new
                        {
                            Id = 22,
                            Name = "EcoLite Solutions"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Prime Venture Group"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Visionary Ventures Inc."
                        },
                        new
                        {
                            Id = 25,
                            Name = "NexWave Analytics"
                        },
                        new
                        {
                            Id = 26,
                            Name = "StarLink Industries"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Core Digital Solutions"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Apex Renewable Energy"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Infinite Horizons Corp."
                        },
                        new
                        {
                            Id = 30,
                            Name = "Phoenix Cybersecurity"
                        },
                        new
                        {
                            Id = 31,
                            Name = "TerraNova Biotech"
                        },
                        new
                        {
                            Id = 32,
                            Name = "AstroLabs Technologies"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Insight Data Solutions"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Purewater Holdings"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Omega Construction Group"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Epicure Food Services"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Nova Telecom Solutions"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Sapphire Tech Group"
                        },
                        new
                        {
                            Id = 39,
                            Name = "BrightPath Consultants"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Precision Engineering Inc."
                        },
                        new
                        {
                            Id = 41,
                            Name = "Sushimi"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Amazon"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Google"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Costco"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Sams Club"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Walmart"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Bodega Aurrera"
                        });
                });

            modelBuilder.Entity("DomainLayer.Models.Publication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("EnterpriseId")
                        .HasColumnType("int");

                    b.Property<string>("Information")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Ranking")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EnterpriseId");

                    b.ToTable("Publications", (string)null);
                });

            modelBuilder.Entity("DomainLayer.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("DomainLayer.Models.Work", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EnterpriseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("UserId");

                    b.ToTable("Works", (string)null);
                });

            modelBuilder.Entity("DomainLayer.Models.Attachment", b =>
                {
                    b.HasOne("DomainLayer.Models.Publication", "Publication")
                        .WithMany("Attachments")
                        .HasForeignKey("PublicationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UploadedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publication");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DomainLayer.Models.Comment", b =>
                {
                    b.HasOne("DomainLayer.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.Publication", "Publication")
                        .WithMany("Comments")
                        .HasForeignKey("PublicationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Publication");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DomainLayer.Models.Publication", b =>
                {
                    b.HasOne("DomainLayer.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DomainLayer.Models.Work", b =>
                {
                    b.HasOne("DomainLayer.Models.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.User", "User")
                        .WithMany("Works")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Enterprise");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DomainLayer.Models.Publication", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Comments");
                });

            modelBuilder.Entity("DomainLayer.Models.User", b =>
                {
                    b.Navigation("Works");
                });
#pragma warning restore 612, 618
        }
    }
}
